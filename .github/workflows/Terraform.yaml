name: Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Select the Terraform action to execute"
        required: true
        default: "plan"
        type: choice
        options:
          - init
          - plan
          - apply
          - destroy
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'  
  push:
    branches:
      - main
    paths:
      - 'terraform/**'  

permissions:
  pull-requests: write
  contents: read

jobs:
  terraform:
    name: Terraform Workflow
    # runs-on: runner-stemdo-labs
    runs-on: runner-stemdo-labs
    
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      SUBNET_PRODUCTION_ID: ${{ secrets.SUBNET_PRODUCTION_ID }}


      

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Login to Azure with Service Principal
        run: |
          az login --service-principal \
            -u ${{ secrets.ARM_CLIENT_ID }} \
            -p ${{ secrets.ARM_CLIENT_SECRET }} \
            --tenant ${{ secrets.ARM_TENANT_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'plan' || github.event_name == 'pull_request' }}
        run: terraform plan -var="subnet_production_id=${{ secrets.SUBNET_PRODUCTION_ID }}"
        working-directory: ./terraform

      - name: Terraform Apply
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply' || github.event_name == 'push' }}
        run: terraform apply -auto-approve -var="subnet_production_id=${{ secrets.SUBNET_PRODUCTION_ID }}"
        working-directory: ./terraform

      - name: Terraform Destroy
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve -var="subnet_production_id=${{ secrets.SUBNET_PRODUCTION_ID }}"
        working-directory: ./terraform

      - name: Terraform State List
        if: ${{ failure() || github.event.inputs.action == 'destroy' }}
        run: terraform state list
        working-directory: ./terraform
