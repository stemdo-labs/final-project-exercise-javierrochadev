name: 'Frontend CI'
on:
  workflow_call:
    inputs:
      image_name:
        description: "Name of the Docker image"
        required: true
        type: string
      image_tag:
        description: "Tag for the Docker image"
        required: false
        type: string
        default: "latest"
      release_env:
          description: 'Name of the Release env to deploy'
          required: true
          type: string
      release_name:
          description: 'Name of the Release chart to deploy'
          required: true
          type: string
    secrets:
     acr_name:
       description: "Azure Container Registry name"
       required: true
     arm_tenant_id:
       description: "Azure Tenant ID"
       required: true
     arm_client_id:
       description: "Azure Client ID"
       required: true
     arm_client_secret:
       description: "Azure Client Secret"
       required: true
jobs:
  deploy:
    # runs-on: runner-stemdo-labs
    runs-on: ubuntu-latest
    steps:
      # - name: Set up Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20'
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Check out code
        uses: actions/checkout@v3
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        shell: bash
      - name: Login to Azure with Service Principal
        run: |
          az login --service-principal \
            -u ${{ secrets.arm_client_id }} \
            -p ${{ secrets.arm_client_secret }} \
            --tenant ${{ secrets.arm_tenant_id }}
        shell: bash
      - name: Log in to ACR
        run: |
          az acr login --name ${{ secrets.acr_name }}
        shell: bash

      - name: Set backend service name value on nginx.conf
        run: |
          sudo bash ./set_server.sh http://${{ inputs.release_env }}-backend-service:8080
        shell: bash

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.acr_name }}.azurecr.io/${{ inputs.release_env }}-${{ inputs.image_name }}:${{ inputs.image_tag }} .
        shell: bash
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.acr_name }}.azurecr.io/${{ inputs.release_env }}-${{ inputs.image_name }}:${{ inputs.image_tag }}
        shell: bash
        
