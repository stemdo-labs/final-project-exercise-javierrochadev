

name: Backup
 
on:
  workflow_dispatch:

permissions:
  pull-requests: write
  contents: read
 
jobs:
  ansible:
    name: Ansible Workflow
    runs-on: self-hosted
 
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      PUBLIC_IP: ${{ vars.PUBLIC_IP }}
      
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      BACKUP_DIR: ${{ vars.BACKUP_DIR }}

      CONTAINER_BACKUP_NAME: ${{ secrets.CONTAINER_BACKUP_NAME }}
      RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
      STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}

    steps:
      - name: Execute Database Backup playbook
        run: |
          ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i inventory.ini db_backup.yaml
        working-directory: ./ansible
      - name: Instalacion de azcli
        run: |
          sudo install snap azcli
      - name: Se crea un blob en azure
        run: |
          az storage container create --name $CONTAINER_BACKUP_NAME --account-name $STORAGE_ACCOUNT_NAME
      - name: Realizar copia a azure
        run: |
           azcopy copy /.backups/backup.sql.gz.enc https://$STORAGE_ACCOUNT_NAME.blob.core.windows.net/$CONTAINER_BACKUP_NAME/backup.sql.gz.enc
        working-directory: ./ansible
        

        
