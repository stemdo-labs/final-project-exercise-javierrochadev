

name: Backup
 
on:
  workflow_dispatch:

permissions:
  pull-requests: write
  contents: read
 
jobs:
  ansible:
    name: Ansible Workflow
    runs-on: self-hosted
 
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      PUBLIC_IP: ${{ vars.PUBLIC_IP }}
      
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      BACKUP_DIR: ${{ vars.BACKUP_DIR }}

      CONTAINER_BACKUP_NAME: ${{ secrets.CONTAINER_BACKUP_NAME }}
      RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
      STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}

    steps:
      - name: Instalacion de azure.azcollection
        run: |
          ansible-galaxy collection install azure.azcollection
        working-directory: ./ansible
      - name: Instalar Python 2.7 y pip3
        run: |
          sudo apt update

          sudo apt install -y python2.7 python2.7-dev python3-pip

          python2.7 --version

          python3 -m pip install --upgrade pip
          
          pip3 --version
      - name: Instalacion de dependendias de python
        run: |
          pip3 install -r ~/.ansible/collections/ansible_collections/azure/azcollection/requirements.txt
        working-directory: ./ansible
      - name: Actualizacion de azure.collection
        run: |
          ansible-galaxy collection install azure.azcollection --force
        working-directory: ./ansible
      - name: Execute Database Backup playbook
        run: |
          ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i inventory.ini db_backup.yaml
        working-directory: ./ansible
        
