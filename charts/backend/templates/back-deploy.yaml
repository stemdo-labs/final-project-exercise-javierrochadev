apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-deploy"
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-app"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-app"
    spec:
      imagePullSecrets:    
        - name: {{ .Values.image.pullSecret }}
      containers:
      - name: "{{ .Release.Name }}-deploy"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        env:
          - name: SPRING_DB_HOST
            valueFrom:
              configMapKeyRef:
                name: "{{ .Release.Name }}-config"
                key: SPRING_DB_HOST
          - name: SPRING_DB_PORT
            valueFrom:
              configMapKeyRef:
                name: "{{ .Release.Name }}-config"
                key: SPRING_DB_PORT
          - name: SPRING_DB_NAME
            valueFrom:
              configMapKeyRef:
                name: "{{ .Release.Name }}-config"
                key: SPRING_DB_NAME
          - name: SPRING_DB_USER
            valueFrom:
              configMapKeyRef:
                name: "{{ .Release.Name }}-config"
                key: SPRING_DB_USER
          - name: SPRING_DB_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: "{{ .Release.Name }}-config"
                key: SPRING_DB_PASSWORD
        ports:
          - containerPort: 8080  # Puerto que escucha tu backend
     #    volumeMounts:
     #    - name: tls-secret-volume
     #      mountPath: /etc/ssl/certs
     #      readOnly: true  
     #  volumes:  # Este bloque debe estar a nivel del spec, fuera de los containers
     #  - name: tls-secret-volume
     #    secret:
     #      secretName: tls-secret
