- name: Backup
  hosts: database_server
  become: true
  vars:
    postgres_user: "postgres"
    postgres_db: "orquestas"
    backup_file: "/var/backups/postgres/backup_{{ ansible_date_time.date }}.sql.gz.enc"
    encryption_key: "G7x!#aB12$vf@kT"
    local_backup_dir: "/var/backups/postgres"
 
  tasks:
    - name: Crear el directorio de backups si no existe
      file:
        path: "/var/backups/postgres"
        state: directory
        mode: '0755'
 
    - name: Dump y cifrar la base de datos PostgreSQL
      shell: |
        pg_dump -U {{ postgres_user }} {{ postgres_db }} | gzip | openssl enc -aes-256-cbc -salt -out {{ backup_file }} -k "{{ encryption_key }}"
      environment:
        PGPASSWORD: "mypassword"
      register: backup_result
 
    - name: Verificar si el dump y cifrado fue exitoso
      debug:
        msg: "Backup creado correctamente en {{ backup_file }}"
      when: backup_result.rc == 0
      
    - name: Crear directorio local para backups si no existe
      local_action: file
        path: "{{ local_backup_dir }}"
        state: directory
        mode: '0755'

    - name: Copiar el archivo de backup a la m√°quina local
      fetch:
        src: "{{ backup_file }}"
        dest: "{{ local_backup_dir }}/"
        flat: yes
      when: backup_result.rc == 0
 
